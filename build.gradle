plugins {
    id("java")
    id("maven-publish")
    id("gronk").version("latest.release")
    id("io.freefair.lombok").version("latest.release")
    id("com.github.johnrengelman.shadow").version("latest.release")
}

version("0.3.0")

sourceSets {
    test {
        java.srcDirs = ["test/project/source"]
    }
}

compileJava {
    options.compilerArgs += [
        "com.sun.tools.javac.api",
        "com.sun.tools.javac.code",
        "com.sun.tools.javac.comp",
        "com.sun.tools.javac.processing",
        "com.sun.tools.javac.tree",
        "com.sun.tools.javac.util"
    ].collectMany {["--add-exports", "jdk.compiler/$it=ALL-UNNAMED"]}
}

allprojects {
    plugins.with {
        apply("java")
        apply("gronk")
    }

    group("net.auoeke")
    javaVersion(17)

    repositories {
        mavenCentral()
        maven("maven.auoeke.net")
    }

    jar {
        from(rootProject.file("LICENSE")) {
            into("META-INF")
        }

        manifest {
            attributes("Specification-Version": project.version)
        }
    }
}

dependencies {
    implementation("net.auoeke:reflect")
    implementation("org.ow2.asm:asm-tree")
    implementation("org.ow2.asm:asm-util")

    testAnnotationProcessor(rootProject)
    testImplementation(gradleTestKit())
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

test {
    dependsOn(publishToMavenLocal)
    mustRunAfter(clean)
    useJUnitPlatform()
}

publishing {
    repositories {
        maven("maven.auoeke.net") {
            username(systemProperty("maven.username"))
            password(systemProperty("maven.password"))
        }
    }
}
